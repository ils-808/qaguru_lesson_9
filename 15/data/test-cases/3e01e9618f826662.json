{"uid":"3e01e9618f826662","name":"test_github_with_decorator_allure","fullName":"tests.test_github#test_github_with_decorator_allure","historyId":"5d170e20f55e73dd38c82f4bb4782f41","time":{"start":1697390455100,"stop":1697390456009,"duration":909},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 118\nCurrent browser version is 117.0.5938.132 with binary path /opt/google/chrome/chrome\nStacktrace:\n#0 0x55cbb7a99fb3 <unknown>\n#1 0x55cbb776d4a7 <unknown>\n#2 0x55cbb77a595b <unknown>\n#3 0x55cbb77a4c1a <unknown>\n#4 0x55cbb779facf <unknown>\n#5 0x55cbb779d10c <unknown>\n#6 0x55cbb77dfac6 <unknown>\n#7 0x55cbb77d6713 <unknown>\n#8 0x55cbb77a918b <unknown>\n#9 0x55cbb77a9f7e <unknown>\n#10 0x55cbb7a5f8d8 <unknown>\n#11 0x55cbb7a63800 <unknown>\n#12 0x55cbb7a6dcfc <unknown>\n#13 0x55cbb7a64418 <unknown>\n#14 0x55cbb7a3142f <unknown>\n#15 0x55cbb7a884e8 <unknown>\n#16 0x55cbb7a886b4 <unknown>\n#17 0x55cbb7a99143 <unknown>\n#18 0x7fe335494b43 <unknown>","statusTrace":"@allure.tag(\"web\")\n    @allure.severity(Severity.CRITICAL)\n    @allure.label(\"owner\", \"qwe\")\n    @allure.feature(\"Задачи в репозитории\")\n    @allure.story(\"Переход в репо с декоратором @allure.step\")\n    @allure.link(\"https://github.com\", name=\"Testing\")\n    def test_github_with_decorator_allure():\n>       open_browser(\"https://github.com/\")\n\ntests/test_github.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_github.py:61: in open_browser\n    browser.open(url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py:1155: in open\n    self.config._executor.get_url(relative_or_absolute_url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:301: in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:216: in get\n    driver = config.driver\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:343: in __get__\n    driver = config.build_driver_strategy(config)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:171: in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:93: in install_and_build_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:56: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:205: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:289: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ffa21e6c590>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: This version of Chro...\\\\n#16 0x55cbb7a886b4 \\\\u003Cunknown>\\\\n#17 0x55cbb7a99143 \\\\u003Cunknown>\\\\n#18 0x7fe335494b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 118\nE       Current browser version is 117.0.5938.132 with binary path /opt/google/chrome/chrome\nE       Stacktrace:\nE       #0 0x55cbb7a99fb3 <unknown>\nE       #1 0x55cbb776d4a7 <unknown>\nE       #2 0x55cbb77a595b <unknown>\nE       #3 0x55cbb77a4c1a <unknown>\nE       #4 0x55cbb779facf <unknown>\nE       #5 0x55cbb779d10c <unknown>\nE       #6 0x55cbb77dfac6 <unknown>\nE       #7 0x55cbb77d6713 <unknown>\nE       #8 0x55cbb77a918b <unknown>\nE       #9 0x55cbb77a9f7e <unknown>\nE       #10 0x55cbb7a5f8d8 <unknown>\nE       #11 0x55cbb7a63800 <unknown>\nE       #12 0x55cbb7a6dcfc <unknown>\nE       #13 0x55cbb7a64418 <unknown>\nE       #14 0x55cbb7a3142f <unknown>\nE       #15 0x55cbb7a884e8 <unknown>\nE       #16 0x55cbb7a886b4 <unknown>\nE       #17 0x55cbb7a99143 <unknown>\nE       #18 0x7fe335494b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"configure_browser","time":{"start":1697390452394,"stop":1697390452394,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 118\nCurrent browser version is 117.0.5938.132 with binary path /opt/google/chrome/chrome\nStacktrace:\n#0 0x55cbb7a99fb3 <unknown>\n#1 0x55cbb776d4a7 <unknown>\n#2 0x55cbb77a595b <unknown>\n#3 0x55cbb77a4c1a <unknown>\n#4 0x55cbb779facf <unknown>\n#5 0x55cbb779d10c <unknown>\n#6 0x55cbb77dfac6 <unknown>\n#7 0x55cbb77d6713 <unknown>\n#8 0x55cbb77a918b <unknown>\n#9 0x55cbb77a9f7e <unknown>\n#10 0x55cbb7a5f8d8 <unknown>\n#11 0x55cbb7a63800 <unknown>\n#12 0x55cbb7a6dcfc <unknown>\n#13 0x55cbb7a64418 <unknown>\n#14 0x55cbb7a3142f <unknown>\n#15 0x55cbb7a884e8 <unknown>\n#16 0x55cbb7a886b4 <unknown>\n#17 0x55cbb7a99143 <unknown>\n#18 0x7fe335494b43 <unknown>","statusTrace":"@allure.tag(\"web\")\n    @allure.severity(Severity.CRITICAL)\n    @allure.label(\"owner\", \"qwe\")\n    @allure.feature(\"Задачи в репозитории\")\n    @allure.story(\"Переход в репо с декоратором @allure.step\")\n    @allure.link(\"https://github.com\", name=\"Testing\")\n    def test_github_with_decorator_allure():\n>       open_browser(\"https://github.com/\")\n\ntests/test_github.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_github.py:61: in open_browser\n    browser.open(url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py:1155: in open\n    self.config._executor.get_url(relative_or_absolute_url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:301: in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:216: in get\n    driver = config.driver\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:343: in __get__\n    driver = config.build_driver_strategy(config)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:171: in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:93: in install_and_build_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:56: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:205: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:289: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ffa21e6c590>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: This version of Chro...\\\\n#16 0x55cbb7a886b4 \\\\u003Cunknown>\\\\n#17 0x55cbb7a99143 \\\\u003Cunknown>\\\\n#18 0x7fe335494b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 118\nE       Current browser version is 117.0.5938.132 with binary path /opt/google/chrome/chrome\nE       Stacktrace:\nE       #0 0x55cbb7a99fb3 <unknown>\nE       #1 0x55cbb776d4a7 <unknown>\nE       #2 0x55cbb77a595b <unknown>\nE       #3 0x55cbb77a4c1a <unknown>\nE       #4 0x55cbb779facf <unknown>\nE       #5 0x55cbb779d10c <unknown>\nE       #6 0x55cbb77dfac6 <unknown>\nE       #7 0x55cbb77d6713 <unknown>\nE       #8 0x55cbb77a918b <unknown>\nE       #9 0x55cbb77a9f7e <unknown>\nE       #10 0x55cbb7a5f8d8 <unknown>\nE       #11 0x55cbb7a63800 <unknown>\nE       #12 0x55cbb7a6dcfc <unknown>\nE       #13 0x55cbb7a64418 <unknown>\nE       #14 0x55cbb7a3142f <unknown>\nE       #15 0x55cbb7a884e8 <unknown>\nE       #16 0x55cbb7a886b4 <unknown>\nE       #17 0x55cbb7a99143 <unknown>\nE       #18 0x7fe335494b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","steps":[{"name":"Open browser with URL: 'https://github.com/'","time":{"start":1697390455101,"stop":1697390456007,"duration":906},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 118\nCurrent browser version is 117.0.5938.132 with binary path /opt/google/chrome/chrome\nStacktrace:\n#0 0x55cbb7a99fb3 <unknown>\n#1 0x55cbb776d4a7 <unknown>\n#2 0x55cbb77a595b <unknown>\n#3 0x55cbb77a4c1a <unknown>\n#4 0x55cbb779facf <unknown>\n#5 0x55cbb779d10c <unknown>\n#6 0x55cbb77dfac6 <unknown>\n#7 0x55cbb77d6713 <unknown>\n#8 0x55cbb77a918b <unknown>\n#9 0x55cbb77a9f7e <unknown>\n#10 0x55cbb7a5f8d8 <unknown>\n#11 0x55cbb7a63800 <unknown>\n#12 0x55cbb7a6dcfc <unknown>\n#13 0x55cbb7a64418 <unknown>\n#14 0x55cbb7a3142f <unknown>\n#15 0x55cbb7a884e8 <unknown>\n#16 0x55cbb7a886b4 <unknown>\n#17 0x55cbb7a99143 <unknown>\n#18 0x7fe335494b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/qaguru_lesson_9/qaguru_lesson_9/tests/test_github.py\", line 61, in open_browser\n    browser.open(url)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py\", line 1155, in open\n    self.config._executor.get_url(relative_or_absolute_url)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 301, in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 216, in get\n    driver = config.driver\n             ^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 343, in __get__\n    driver = config.build_driver_strategy(config)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 171, in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n           ^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 93, in install_and_build_chrome\n    return Chrome(\n           ^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py\", line 56, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 205, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 289, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'https://github.com/'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"185963a80966513d","name":"stderr","source":"185963a80966513d.txt","type":"text/plain","size":258}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"configure_browser::0","time":{"start":1697390456084,"stop":1697390456977,"duration":893},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 118\nCurrent browser version is 117.0.5938.132 with binary path /opt/google/chrome/chrome\nStacktrace:\n#0 0x558f36c6dfb3 <unknown>\n#1 0x558f369414a7 <unknown>\n#2 0x558f3697995b <unknown>\n#3 0x558f36978c1a <unknown>\n#4 0x558f36973acf <unknown>\n#5 0x558f3697110c <unknown>\n#6 0x558f369b3ac6 <unknown>\n#7 0x558f369aa713 <unknown>\n#8 0x558f3697d18b <unknown>\n#9 0x558f3697df7e <unknown>\n#10 0x558f36c338d8 <unknown>\n#11 0x558f36c37800 <unknown>\n#12 0x558f36c41cfc <unknown>\n#13 0x558f36c38418 <unknown>\n#14 0x558f36c0542f <unknown>\n#15 0x558f36c5c4e8 <unknown>\n#16 0x558f36c5c6b4 <unknown>\n#17 0x558f36c6d143 <unknown>\n#18 0x7fe126694b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 911, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/work/qaguru_lesson_9/qaguru_lesson_9/tests/conftest.py\", line 16, in configure_browser\n    browser.close()\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py\", line 1209, in close\n    self.driver.close()\n    ^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py\", line 1100, in driver\n    return self.config.driver\n           ^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 343, in __get__\n    driver = config.build_driver_strategy(config)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 171, in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n           ^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 93, in install_and_build_chrome\n    return Chrome(\n           ^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py\", line 56, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 205, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 289, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"labels":[{"name":"owner","value":"qwe"},{"name":"tag","value":"web"},{"name":"story","value":"Переход в репо с декоратором @allure.step"},{"name":"severity","value":"critical"},{"name":"feature","value":"Задачи в репозитории"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_github"},{"name":"host","value":"fv-az593-526"},{"name":"thread","value":"2223-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_github"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Testing","url":"https://github.com","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"critical","owner":"qwe","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"b240ca31fbfecd66","reportUrl":"https://ils-808.github.io/qaguru_lesson_9/11//#testresult/b240ca31fbfecd66","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 118\nCurrent browser version is 117.0.5938.132 with binary path /opt/google/chrome/chrome\nStacktrace:\n#0 0x56176d560fb3 <unknown>\n#1 0x56176d2344a7 <unknown>\n#2 0x56176d26c95b <unknown>\n#3 0x56176d26bc1a <unknown>\n#4 0x56176d266acf <unknown>\n#5 0x56176d26410c <unknown>\n#6 0x56176d2a6ac6 <unknown>\n#7 0x56176d29d713 <unknown>\n#8 0x56176d27018b <unknown>\n#9 0x56176d270f7e <unknown>\n#10 0x56176d5268d8 <unknown>\n#11 0x56176d52a800 <unknown>\n#12 0x56176d534cfc <unknown>\n#13 0x56176d52b418 <unknown>\n#14 0x56176d4f842f <unknown>\n#15 0x56176d54f4e8 <unknown>\n#16 0x56176d54f6b4 <unknown>\n#17 0x56176d560143 <unknown>\n#18 0x7fb5f0494b43 <unknown>","time":{"start":1697388831499,"stop":1697388832504,"duration":1005}}]},"tags":["web"]},"source":"3e01e9618f826662.json","parameterValues":[]}